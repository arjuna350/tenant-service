/*
 * TennatApplication
 * An application to manage multi-tenancy information
 *
 * OpenAPI spec version: TennatApplication v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infa.products.tenant.client.model;

import java.util.Objects;

import com.google.gson.Gson;

import io.swagger.annotations.ApiModelProperty;

/**
 * TenantResponse
 */

public class TenantResponse {
 
  private String id = null;

 
  private String value = null;
  
  private TenantDetails  tenantDetails= null;
  

public TenantResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TenantResponse value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public Object getValue() {
    return value;
  }
  

  public TenantDetails getTenantDetails() {
	  
	  if(tenantDetails==null && value!=null)
	  {
		   Gson gson = new Gson();
		   tenantDetails=gson.fromJson((String) value, TenantDetails.class);
	  }
		  
	return tenantDetails;
}


  public TenantResponse(String id, String value) {
	super();
	this.id = id;
	this.value = value;
}

public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TenantResponse tenantResponse = (TenantResponse) o;
    return Objects.equals(this.id, tenantResponse.id) &&
        Objects.equals(this.value, tenantResponse.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TenantResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }




}

